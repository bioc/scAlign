% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scAlign.R
\name{scAlign}
\alias{scAlign}
\title{Run scAlign framework}
\usage{
scAlign(sce.object, options = scAlignOptions(),
  encoder.data = "scale.data", decoder.data = encoder.data,
  supervised = "none", run.encoder = TRUE, run.decoder = TRUE,
  log.dir = "./models/", log.results = FALSE, device = "CPU")
}
\arguments{
\item{sce.object}{scAlign object.}

\item{options}{Training options for scAlign.}

\item{encoder.data}{Which data format to use for alignment.}

\item{decoder.data}{Which data format to use for interpolation.}

\item{supervised}{Run scAlign in supervised mode, requires labels.}

\item{run.encoder}{Run scAlign alignment procedure.}

\item{run.decoder}{Run scAlign projection through paired decoders.}

\item{log.dir}{Location to save results.}

\item{log.results}{Determines if results should be written to log.dir.}

\item{device}{Specify hardware to use.}
}
\value{
scAlign class
}
\description{
Main function for scAlign that runs encoder and decoder networks
}
\examples{

library(Seurat)
library(SingleCellExperiment)

## Input data, 1000 genes x 100 cells
data = matrix(sample.int(10000, 1000*100, TRUE), 1000, 100)
rownames(data) = paste0("gene", seq_len(1000))
colnames(data) = paste0("cell", seq_len(100))

age    = c(rep("young",50), rep("old",50))
labels = c(c(rep("type1",25), rep("type2",25)), c(rep("type1",25), rep("type2",25)))

ctrl.data = data[,which(age == "young")]
stim.data = data[,which(age == "old")]

ctrl = CreateSeuratObject(raw.data = ctrl.data, project = "MOUSE_AGE", min.cells = 0)
ctrl@meta.data$stim  = "YOUNG"
ctrl@meta.data$label = labels[which(age == "young")]
ctrl = ScaleData(ctrl, do.scale=TRUE, do.center=TRUE, scale.max=50, display.progress = TRUE)

stim = CreateSeuratObject(raw.data = stim.data, project = "MOUSE_AGE", min.cells = 0)
stim@meta.data$stim = "OLD"
stim@meta.data$label = labels[which(age == "old")]
stim = ScaleData(stim, do.scale=TRUE, do.center=TRUE, scale.max=50, display.progress = TRUE)

## Build the SCE object for input to scAlign using Seurat preprocessing and variable gene selection
ctrl.sce <- SingleCellExperiment(
              assays = list(
                counts = ctrl@raw.data,
                scale.data = ctrl@scale.data),
              colData = ctrl@meta.data)

stim.sce <- SingleCellExperiment(
              assays = list(
                counts = stim@raw.data,
                scale.data = stim@scale.data),
              colData = stim@meta.data)

## Build the scAlign class object and compute PCs
scAlignHSC = scAlignCreateObject(sce.objects = list("YOUNG"=ctrl.sce,
                                                    "OLD"=stim.sce),
                                 labels = list(ctrl.sce@colData@listData$label,
                                               stim.sce@colData@listData$label),
                                 pca.reduce = TRUE,
                                 pcs.compute = 50,
                                 cca.reduce = TRUE,
                                 ccs.compute = 15,
                                 project.name = "scAlign_Kowalcyzk_HSC")

## Run scAlign with high_var_genes
scAlignHSC = scAlign(scAlignHSC,
                    options=scAlignOptions(steps=1, log.every=1, early.stop=TRUE, architecture="large"),
                    encoder.data="scale.data",
                    supervised='none',
                    run.encoder=TRUE,
                    run.decoder=TRUE,
                    log.results=FALSE,
                    device="CPU")

}
