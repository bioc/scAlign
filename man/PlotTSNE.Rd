% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{PlotTSNE}
\alias{PlotTSNE}
\title{Creates tsne plot}
\usage{
PlotTSNE(object, data.use, labels.use = "scAlign.labels", cols = NULL,
  title = "", legend = "none", seed = 1234, ...)
}
\arguments{
\item{object}{scAlign class object with aligned data}

\item{data.use}{Specifies which alignment results to use.}

\item{labels.use}{Specifies "dataset" or "celltype" labeling from object meta.data.}

\item{cols}{Colours for plot}

\item{title}{ggplot title}

\item{legend}{Determines if legend should be drawn}

\item{seed}{Random seed for reproducability}

\item{...}{Additional arguments to Rtsne function}

\item{labels}{Object labels}
}
\value{
ggplot2 object
}
\description{
Creates tsne plot
}
\examples{

library(Seurat)
library(SingleCellExperiment)

## Input data, 1000 genes x 100 cells
data = matrix(sample.int(10000, 1000*100, TRUE), 1000, 100)
rownames(data) = paste0("gene", seq_len(1000))
colnames(data) = paste0("cell", seq_len(100))

age    = c(rep("young",50), rep("old",50))
labels = c(c(rep("type1",25), rep("type2",25)), c(rep("type1",25), rep("type2",25)))

ctrl.data = data[,which(age == "young")]
stim.data = data[,which(age == "old")]

ctrl = CreateSeuratObject(raw.data = ctrl.data, project = "MOUSE_AGE", min.cells = 0)
ctrl <- AddMetaData(object = ctrl,
                    metadata = "YOUNG",
                    col.name = "stim")
ctrl <- AddMetaData(object = ctrl,
                    metadata = cell_type[which(cell_age == "young")],
                    col.name = "label")
ctrl = ScaleData(ctrl, do.scale=TRUE, do.center=TRUE, scale.max=50, display.progress = TRUE)

stim = CreateSeuratObject(raw.data = stim.data, project = "MOUSE_AGE", min.cells = 0)
stim <- AddMetaData(object = stim,
                    metadata = "OLD",
                    col.name = "stim")
stim <- AddMetaData(object = stim,
                    metadata = cell_type[which(cell_age == "old")],
                    col.name = "label")
stim = ScaleData(stim, do.scale=TRUE, do.center=TRUE, scale.max=50, display.progress = TRUE)

## Build the SCE object for input to scAlign using Seurat preprocessing and variable gene selection
ctrl.sce <- SingleCellExperiment(
              assays = list(
                counts = t(FetchData(ctrl, vars.all=rownames(data), use.raw=TRUE)),
                scale.data = t(FetchData(ctrl, vars.all=rownames(data), use.scaled=TRUE)))

stim.sce <- SingleCellExperiment(
              assays = list(
                counts = t(FetchData(stim, vars.all=rownames(data), use.raw=TRUE)),
                scale.data = t(FetchData(stim, vars.all=rownames(data), use.scaled=TRUE)))

## Build the scAlign class object and compute PCs
scAlignHSC = scAlignCreateObject(sce.objects = list("YOUNG"=ctrl.sce,
                                                    "OLD"=stim.sce),
                                 labels = list(cell_type[which(cell_age == "young")],
                                               cell_type[which(cell_age == "old")]),
                                 pca.reduce = TRUE,
                                 pcs.compute = 50,
                                 cca.reduce = TRUE,
                                 ccs.compute = 15,
                                 project.name = "scAlign_Kowalcyzk_HSC")

## Run scAlign with high_var_genes
scAlignHSC = scAlign(scAlignHSC,
                   options=scAlignOptions(steps=5000, log.every=1000, norm=TRUE, early.stop=TRUE),
                   encoder.data="scale.data",
                   supervised='none',
                   run.encoder=TRUE,
                   run.decoder=FALSE,
                   log.dir=file.path(results.dir, 'models','gene_input'),
                   device="CPU")

## Plot alignment for 3 input types
example_plot = PlotTSNE(scAlignHSC, "ALIGNED-GENE", "labels", title="scAlign-Gene", perplexity=30)

}
